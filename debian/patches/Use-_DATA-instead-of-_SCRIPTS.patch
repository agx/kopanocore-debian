From: =?utf-8?q?Guido_G=C3=BCnther?= <agx@sigxcpu.org>
Date: Tue, 28 Apr 2015 11:56:58 +0200
Subject: Use _DATA instead of _SCRIPTS

so python modules don't end up being executable
---
 spooler/python/Makefile.am         |   4 +-
 spooler/python/Makefile.in         | 146 +++++++++++++++----------------------
 spooler/python/plugins/Makefile.am |   2 +-
 spooler/python/plugins/Makefile.in |  76 ++++++++-----------
 4 files changed, 92 insertions(+), 136 deletions(-)

diff --git a/spooler/python/Makefile.am b/spooler/python/Makefile.am
index 79bb6b1..73d902e 100644
--- a/spooler/python/Makefile.am
+++ b/spooler/python/Makefile.am
@@ -3,10 +3,10 @@ SUBDIRS=plugins
 EXTRA_DIST = mapiplugin.py pluginmanager.py plugintemplates.py wraplogger.py wraplogger.py zconfig.py zinterval.py zunit.py
 
 zarafa_dagentdir = ${datadir}/zarafa-dagent/python
-zarafa_dagent_SCRIPTS = mapiplugin.py pluginmanager.py plugintemplates.py wraplogger.py zconfig.py zinterval.py zunit.py
+zarafa_dagent_DATA = mapiplugin.py pluginmanager.py plugintemplates.py wraplogger.py zconfig.py zinterval.py zunit.py
 
 zarafa_spoolerdir = ${datadir}/zarafa-spooler/python
-zarafa_spooler_SCRIPTS = mapiplugin.py pluginmanager.py plugintemplates.py wraplogger.py zconfig.py zinterval.py zunit.py
+zarafa_spooler_DATA = mapiplugin.py pluginmanager.py plugintemplates.py wraplogger.py zconfig.py zinterval.py zunit.py
 
 install-data-hook:
 	mkdir -p ${DESTDIR}/${localstatedir}/lib/zarafa/dagent/plugins/
diff --git a/spooler/python/Makefile.in b/spooler/python/Makefile.in
index 669d5ed..b421dd2 100644
--- a/spooler/python/Makefile.in
+++ b/spooler/python/Makefile.in
@@ -63,6 +63,26 @@ mkinstalldirs = $(install_sh) -d
 CONFIG_HEADER = $(top_builddir)/common/config.h
 CONFIG_CLEAN_FILES =
 CONFIG_CLEAN_VPATH_FILES =
+AM_V_GEN = $(am__v_GEN_@AM_V@)
+am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
+am__v_GEN_0 = @echo "  GEN   " $@;
+AM_V_at = $(am__v_at_@AM_V@)
+am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
+am__v_at_0 = @
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-dvi-recursive install-exec-recursive \
+	install-html-recursive install-info-recursive \
+	install-pdf-recursive install-ps-recursive install-recursive \
+	installcheck-recursive installdirs-recursive pdf-recursive \
+	ps-recursive uninstall-recursive
+am__can_run_installinfo = \
+  case $$AM_UPDATE_INFO_DIR in \
+    n|no|NO) false;; \
+    *) (install-info --version) >/dev/null 2>&1;; \
+  esac
 am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
 am__vpath_adj = case $$p in \
     $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
@@ -92,27 +112,7 @@ am__uninstall_files_from_dir = { \
   }
 am__installdirs = "$(DESTDIR)$(zarafa_dagentdir)" \
 	"$(DESTDIR)$(zarafa_spoolerdir)"
-SCRIPTS = $(zarafa_dagent_SCRIPTS) $(zarafa_spooler_SCRIPTS)
-AM_V_GEN = $(am__v_GEN_@AM_V@)
-am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
-am__v_GEN_0 = @echo "  GEN   " $@;
-AM_V_at = $(am__v_at_@AM_V@)
-am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
-am__v_at_0 = @
-SOURCES =
-DIST_SOURCES =
-RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
-	html-recursive info-recursive install-data-recursive \
-	install-dvi-recursive install-exec-recursive \
-	install-html-recursive install-info-recursive \
-	install-pdf-recursive install-ps-recursive install-recursive \
-	installcheck-recursive installdirs-recursive pdf-recursive \
-	ps-recursive uninstall-recursive
-am__can_run_installinfo = \
-  case $$AM_UPDATE_INFO_DIR in \
-    n|no|NO) false;; \
-    *) (install-info --version) >/dev/null 2>&1;; \
-  esac
+DATA = $(zarafa_dagent_DATA) $(zarafa_spooler_DATA)
 RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
   distclean-recursive maintainer-clean-recursive
 AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
@@ -349,9 +349,9 @@ top_srcdir = @top_srcdir@
 SUBDIRS = plugins
 EXTRA_DIST = mapiplugin.py pluginmanager.py plugintemplates.py wraplogger.py wraplogger.py zconfig.py zinterval.py zunit.py
 zarafa_dagentdir = ${datadir}/zarafa-dagent/python
-zarafa_dagent_SCRIPTS = mapiplugin.py pluginmanager.py plugintemplates.py wraplogger.py zconfig.py zinterval.py zunit.py
+zarafa_dagent_DATA = mapiplugin.py pluginmanager.py plugintemplates.py wraplogger.py zconfig.py zinterval.py zunit.py
 zarafa_spoolerdir = ${datadir}/zarafa-spooler/python
-zarafa_spooler_SCRIPTS = mapiplugin.py pluginmanager.py plugintemplates.py wraplogger.py zconfig.py zinterval.py zunit.py
+zarafa_spooler_DATA = mapiplugin.py pluginmanager.py plugintemplates.py wraplogger.py zconfig.py zinterval.py zunit.py
 all: all-recursive
 
 .SUFFIXES:
@@ -385,83 +385,55 @@ $(top_srcdir)/configure:  $(am__configure_deps)
 $(ACLOCAL_M4):  $(am__aclocal_m4_deps)
 	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
 $(am__aclocal_m4_deps):
-install-zarafa_dagentSCRIPTS: $(zarafa_dagent_SCRIPTS)
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+install-zarafa_dagentDATA: $(zarafa_dagent_DATA)
 	@$(NORMAL_INSTALL)
-	@list='$(zarafa_dagent_SCRIPTS)'; test -n "$(zarafa_dagentdir)" || list=; \
+	@list='$(zarafa_dagent_DATA)'; test -n "$(zarafa_dagentdir)" || list=; \
 	if test -n "$$list"; then \
 	  echo " $(MKDIR_P) '$(DESTDIR)$(zarafa_dagentdir)'"; \
 	  $(MKDIR_P) "$(DESTDIR)$(zarafa_dagentdir)" || exit 1; \
 	fi; \
 	for p in $$list; do \
 	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
-	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
-	done | \
-	sed -e 'p;s,.*/,,;n' \
-	    -e 'h;s|.*|.|' \
-	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
-	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
-	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
-	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
-	      if (++n[d] == $(am__install_max)) { \
-		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
-	    else { print "f", d "/" $$4, $$1 } } \
-	  END { for (d in files) print "f", d, files[d] }' | \
-	while read type dir files; do \
-	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
-	     test -z "$$files" || { \
-	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(zarafa_dagentdir)$$dir'"; \
-	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(zarafa_dagentdir)$$dir" || exit $$?; \
-	     } \
-	; done
-
-uninstall-zarafa_dagentSCRIPTS:
+	  echo "$$d$$p"; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(zarafa_dagentdir)'"; \
+	  $(INSTALL_DATA) $$files "$(DESTDIR)$(zarafa_dagentdir)" || exit $$?; \
+	done
+
+uninstall-zarafa_dagentDATA:
 	@$(NORMAL_UNINSTALL)
-	@list='$(zarafa_dagent_SCRIPTS)'; test -n "$(zarafa_dagentdir)" || exit 0; \
-	files=`for p in $$list; do echo "$$p"; done | \
-	       sed -e 's,.*/,,;$(transform)'`; \
+	@list='$(zarafa_dagent_DATA)'; test -n "$(zarafa_dagentdir)" || list=; \
+	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
 	dir='$(DESTDIR)$(zarafa_dagentdir)'; $(am__uninstall_files_from_dir)
-install-zarafa_spoolerSCRIPTS: $(zarafa_spooler_SCRIPTS)
+install-zarafa_spoolerDATA: $(zarafa_spooler_DATA)
 	@$(NORMAL_INSTALL)
-	@list='$(zarafa_spooler_SCRIPTS)'; test -n "$(zarafa_spoolerdir)" || list=; \
+	@list='$(zarafa_spooler_DATA)'; test -n "$(zarafa_spoolerdir)" || list=; \
 	if test -n "$$list"; then \
 	  echo " $(MKDIR_P) '$(DESTDIR)$(zarafa_spoolerdir)'"; \
 	  $(MKDIR_P) "$(DESTDIR)$(zarafa_spoolerdir)" || exit 1; \
 	fi; \
 	for p in $$list; do \
 	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
-	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
-	done | \
-	sed -e 'p;s,.*/,,;n' \
-	    -e 'h;s|.*|.|' \
-	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
-	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
-	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
-	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
-	      if (++n[d] == $(am__install_max)) { \
-		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
-	    else { print "f", d "/" $$4, $$1 } } \
-	  END { for (d in files) print "f", d, files[d] }' | \
-	while read type dir files; do \
-	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
-	     test -z "$$files" || { \
-	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(zarafa_spoolerdir)$$dir'"; \
-	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(zarafa_spoolerdir)$$dir" || exit $$?; \
-	     } \
-	; done
-
-uninstall-zarafa_spoolerSCRIPTS:
+	  echo "$$d$$p"; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(zarafa_spoolerdir)'"; \
+	  $(INSTALL_DATA) $$files "$(DESTDIR)$(zarafa_spoolerdir)" || exit $$?; \
+	done
+
+uninstall-zarafa_spoolerDATA:
 	@$(NORMAL_UNINSTALL)
-	@list='$(zarafa_spooler_SCRIPTS)'; test -n "$(zarafa_spoolerdir)" || exit 0; \
-	files=`for p in $$list; do echo "$$p"; done | \
-	       sed -e 's,.*/,,;$(transform)'`; \
+	@list='$(zarafa_spooler_DATA)'; test -n "$(zarafa_spoolerdir)" || list=; \
+	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
 	dir='$(DESTDIR)$(zarafa_spoolerdir)'; $(am__uninstall_files_from_dir)
 
-mostlyclean-libtool:
-	-rm -f *.lo
-
-clean-libtool:
-	-rm -rf .libs _libs
-
 # This directory's subdirectories are mostly independent; you can cd
 # into them and run `make' without going through this Makefile.
 # To change the values of `make' variables: instead of editing Makefiles,
@@ -654,7 +626,7 @@ distdir: $(DISTFILES)
 	done
 check-am: all-am
 check: check-recursive
-all-am: Makefile $(SCRIPTS)
+all-am: Makefile $(DATA)
 installdirs: installdirs-recursive
 installdirs-am:
 	for dir in "$(DESTDIR)$(zarafa_dagentdir)" "$(DESTDIR)$(zarafa_spoolerdir)"; do \
@@ -710,8 +682,7 @@ info: info-recursive
 
 info-am:
 
-install-data-am: install-zarafa_dagentSCRIPTS \
-	install-zarafa_spoolerSCRIPTS
+install-data-am: install-zarafa_dagentDATA install-zarafa_spoolerDATA
 	@$(NORMAL_INSTALL)
 	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
 install-dvi: install-dvi-recursive
@@ -756,8 +727,7 @@ ps: ps-recursive
 
 ps-am:
 
-uninstall-am: uninstall-zarafa_dagentSCRIPTS \
-	uninstall-zarafa_spoolerSCRIPTS
+uninstall-am: uninstall-zarafa_dagentDATA uninstall-zarafa_spoolerDATA
 
 .MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
 	install-am install-data-am install-strip tags-recursive
@@ -771,12 +741,12 @@ uninstall-am: uninstall-zarafa_dagentSCRIPTS \
 	install-exec install-exec-am install-html install-html-am \
 	install-info install-info-am install-man install-pdf \
 	install-pdf-am install-ps install-ps-am install-strip \
-	install-zarafa_dagentSCRIPTS install-zarafa_spoolerSCRIPTS \
+	install-zarafa_dagentDATA install-zarafa_spoolerDATA \
 	installcheck installcheck-am installdirs installdirs-am \
 	maintainer-clean maintainer-clean-generic mostlyclean \
 	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
 	tags tags-recursive uninstall uninstall-am \
-	uninstall-zarafa_dagentSCRIPTS uninstall-zarafa_spoolerSCRIPTS
+	uninstall-zarafa_dagentDATA uninstall-zarafa_spoolerDATA
 
 
 install-data-hook:
diff --git a/spooler/python/plugins/Makefile.am b/spooler/python/plugins/Makefile.am
index 66f7ab9..8322f81 100644
--- a/spooler/python/plugins/Makefile.am
+++ b/spooler/python/plugins/Makefile.am
@@ -1,7 +1,7 @@
 EXTRA_DIST = examplerules.py BMP2PNG.py disclaimer.py movetopublic.py movetopublic.cfg uudecode.py
 
 zarafa_dagentdir = ${datadir}/zarafa-dagent/python/plugins
-zarafa_dagent_SCRIPTS=examplerules.py BMP2PNG.py movetopublic.py
+zarafa_dagent_DATA=examplerules.py BMP2PNG.py movetopublic.py
 
 zarafa_dagent_configdir = ${zarafa_dagentdir}
 zarafa_dagent_config_DATA=movetopublic.cfg
diff --git a/spooler/python/plugins/Makefile.in b/spooler/python/plugins/Makefile.in
index 271d925..5ac90c3 100644
--- a/spooler/python/plugins/Makefile.in
+++ b/spooler/python/plugins/Makefile.in
@@ -91,10 +91,10 @@ am__uninstall_files_from_dir = { \
     || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
          $(am__cd) "$$dir" && rm -f $$files; }; \
   }
-am__installdirs = "$(DESTDIR)$(zarafa_dagentdir)" \
-	"$(DESTDIR)$(zarafa_spoolerdir)" \
+am__installdirs = "$(DESTDIR)$(zarafa_spoolerdir)" \
+	"$(DESTDIR)$(zarafa_dagentdir)" \
 	"$(DESTDIR)$(zarafa_dagent_configdir)"
-SCRIPTS = $(zarafa_dagent_SCRIPTS) $(zarafa_spooler_SCRIPTS)
+SCRIPTS = $(zarafa_spooler_SCRIPTS)
 AM_V_GEN = $(am__v_GEN_@AM_V@)
 am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
 am__v_GEN_0 = @echo "  GEN   " $@;
@@ -108,7 +108,7 @@ am__can_run_installinfo = \
     n|no|NO) false;; \
     *) (install-info --version) >/dev/null 2>&1;; \
   esac
-DATA = $(zarafa_dagent_config_DATA)
+DATA = $(zarafa_dagent_DATA) $(zarafa_dagent_config_DATA)
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 ACLOCAL = @ACLOCAL@
 AMTAR = @AMTAR@
@@ -311,7 +311,7 @@ top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
 EXTRA_DIST = examplerules.py BMP2PNG.py disclaimer.py movetopublic.py movetopublic.cfg uudecode.py
 zarafa_dagentdir = ${datadir}/zarafa-dagent/python/plugins
-zarafa_dagent_SCRIPTS = examplerules.py BMP2PNG.py movetopublic.py
+zarafa_dagent_DATA = examplerules.py BMP2PNG.py movetopublic.py
 zarafa_dagent_configdir = ${zarafa_dagentdir}
 zarafa_dagent_config_DATA = movetopublic.cfg
 zarafa_spoolerdir = ${datadir}/zarafa-spooler/python/plugins
@@ -349,41 +349,6 @@ $(top_srcdir)/configure:  $(am__configure_deps)
 $(ACLOCAL_M4):  $(am__aclocal_m4_deps)
 	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
 $(am__aclocal_m4_deps):
-install-zarafa_dagentSCRIPTS: $(zarafa_dagent_SCRIPTS)
-	@$(NORMAL_INSTALL)
-	@list='$(zarafa_dagent_SCRIPTS)'; test -n "$(zarafa_dagentdir)" || list=; \
-	if test -n "$$list"; then \
-	  echo " $(MKDIR_P) '$(DESTDIR)$(zarafa_dagentdir)'"; \
-	  $(MKDIR_P) "$(DESTDIR)$(zarafa_dagentdir)" || exit 1; \
-	fi; \
-	for p in $$list; do \
-	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
-	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
-	done | \
-	sed -e 'p;s,.*/,,;n' \
-	    -e 'h;s|.*|.|' \
-	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
-	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
-	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
-	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
-	      if (++n[d] == $(am__install_max)) { \
-		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
-	    else { print "f", d "/" $$4, $$1 } } \
-	  END { for (d in files) print "f", d, files[d] }' | \
-	while read type dir files; do \
-	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
-	     test -z "$$files" || { \
-	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(zarafa_dagentdir)$$dir'"; \
-	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(zarafa_dagentdir)$$dir" || exit $$?; \
-	     } \
-	; done
-
-uninstall-zarafa_dagentSCRIPTS:
-	@$(NORMAL_UNINSTALL)
-	@list='$(zarafa_dagent_SCRIPTS)'; test -n "$(zarafa_dagentdir)" || exit 0; \
-	files=`for p in $$list; do echo "$$p"; done | \
-	       sed -e 's,.*/,,;$(transform)'`; \
-	dir='$(DESTDIR)$(zarafa_dagentdir)'; $(am__uninstall_files_from_dir)
 install-zarafa_spoolerSCRIPTS: $(zarafa_spooler_SCRIPTS)
 	@$(NORMAL_INSTALL)
 	@list='$(zarafa_spooler_SCRIPTS)'; test -n "$(zarafa_spoolerdir)" || list=; \
@@ -425,6 +390,27 @@ mostlyclean-libtool:
 
 clean-libtool:
 	-rm -rf .libs _libs
+install-zarafa_dagentDATA: $(zarafa_dagent_DATA)
+	@$(NORMAL_INSTALL)
+	@list='$(zarafa_dagent_DATA)'; test -n "$(zarafa_dagentdir)" || list=; \
+	if test -n "$$list"; then \
+	  echo " $(MKDIR_P) '$(DESTDIR)$(zarafa_dagentdir)'"; \
+	  $(MKDIR_P) "$(DESTDIR)$(zarafa_dagentdir)" || exit 1; \
+	fi; \
+	for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  echo "$$d$$p"; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(zarafa_dagentdir)'"; \
+	  $(INSTALL_DATA) $$files "$(DESTDIR)$(zarafa_dagentdir)" || exit $$?; \
+	done
+
+uninstall-zarafa_dagentDATA:
+	@$(NORMAL_UNINSTALL)
+	@list='$(zarafa_dagent_DATA)'; test -n "$(zarafa_dagentdir)" || list=; \
+	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
+	dir='$(DESTDIR)$(zarafa_dagentdir)'; $(am__uninstall_files_from_dir)
 install-zarafa_dagent_configDATA: $(zarafa_dagent_config_DATA)
 	@$(NORMAL_INSTALL)
 	@list='$(zarafa_dagent_config_DATA)'; test -n "$(zarafa_dagent_configdir)" || list=; \
@@ -487,7 +473,7 @@ check-am: all-am
 check: check-am
 all-am: Makefile $(SCRIPTS) $(DATA)
 installdirs:
-	for dir in "$(DESTDIR)$(zarafa_dagentdir)" "$(DESTDIR)$(zarafa_spoolerdir)" "$(DESTDIR)$(zarafa_dagent_configdir)"; do \
+	for dir in "$(DESTDIR)$(zarafa_spoolerdir)" "$(DESTDIR)$(zarafa_dagentdir)" "$(DESTDIR)$(zarafa_dagent_configdir)"; do \
 	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
 	done
 install: install-am
@@ -540,7 +526,7 @@ info: info-am
 
 info-am:
 
-install-data-am: install-zarafa_dagentSCRIPTS \
+install-data-am: install-zarafa_dagentDATA \
 	install-zarafa_dagent_configDATA install-zarafa_spoolerSCRIPTS
 
 install-dvi: install-dvi-am
@@ -585,7 +571,7 @@ ps: ps-am
 
 ps-am:
 
-uninstall-am: uninstall-zarafa_dagentSCRIPTS \
+uninstall-am: uninstall-zarafa_dagentDATA \
 	uninstall-zarafa_dagent_configDATA \
 	uninstall-zarafa_spoolerSCRIPTS
 
@@ -598,11 +584,11 @@ uninstall-am: uninstall-zarafa_dagentSCRIPTS \
 	install-exec install-exec-am install-html install-html-am \
 	install-info install-info-am install-man install-pdf \
 	install-pdf-am install-ps install-ps-am install-strip \
-	install-zarafa_dagentSCRIPTS install-zarafa_dagent_configDATA \
+	install-zarafa_dagentDATA install-zarafa_dagent_configDATA \
 	install-zarafa_spoolerSCRIPTS installcheck installcheck-am \
 	installdirs maintainer-clean maintainer-clean-generic \
 	mostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \
-	ps ps-am uninstall uninstall-am uninstall-zarafa_dagentSCRIPTS \
+	ps ps-am uninstall uninstall-am uninstall-zarafa_dagentDATA \
 	uninstall-zarafa_dagent_configDATA \
 	uninstall-zarafa_spoolerSCRIPTS
 
